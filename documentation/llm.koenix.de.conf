# -------------------------------------------------------------
# Nginx configuration for InsightBridge
# -------------------------------------------------------------
# To enable this site:
# 1. Save this file as /etc/nginx/sites-available/llm.koenix.de
# 2. Create a symlink to sites-enabled:
#       sudo ln -s /etc/nginx/sites-available/llm.koenix.de /etc/nginx/sites-enabled/
# 3. Test the configuration:
#       sudo nginx -t
# 4. Reload Nginx:
#       sudo systemctl reload nginx
# -------------------------------------------------------------

# -----------------------------
# HTTP server: redirects all traffic to HTTPS
# -----------------------------
server {
    listen 80;  # Listen on standard HTTP port
    server_name llm.koenix.de www.llm.koenix.de;  # Domain names for this server

    # Redirect all HTTP requests to HTTPS
    return 301 https://$host$request_uri;
}


# -----------------------------
# HTTPS server
# -----------------------------
server {
    listen 443 ssl http2;  # Listen on HTTPS port with HTTP/2 enabled
    server_name llm.koenix.de www.llm.koenix.de;

    # SSL certificate paths (from Let's Encrypt)
    ssl_certificate /etc/letsencrypt/live/llm.koenix.de/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/llm.koenix.de/privkey.pem;

    # -----------------------------
    # Root path: main application
    # -----------------------------
    location / {
        proxy_pass http://127.0.0.1:8080;  # Forward requests to the Docker container running your app

        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection_upgrade;

        # Preserve client info
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Increase timeout for long-running requests
        proxy_read_timeout 3600s;

        # Disable Nginx buffering (stream data immediately)
        proxy_buffering off;
    }

    # -----------------------------
    # Service Worker
    # -----------------------------
    location = /service-worker.js {
        proxy_pass http://127.0.0.1:8080/pwa/service-worker.js;  # Serve SW from Docker app
        proxy_set_header Service-Worker-Allowed "/";  # Allow SW to control entire scope
        proxy_buffering off;  # Stream immediately
    }

    # -----------------------------
    # PWA manifest
    # -----------------------------
    location = /manifest.json {
        proxy_pass http://127.0.0.1:8080/pwa/manifest.json;  # Serve manifest.json from Docker app
        proxy_buffering off;  # Stream immediately
    }

    # -----------------------------
    # Static assets for PWA (icons, JS, etc.)
    # -----------------------------
    location /pwa/ {
        proxy_pass http://127.0.0.1:8080/pwa/;  # Forward to Docker app's PWA folder
        proxy_buffering off;  # Stream immediately
        add_header Cache-Control "public, max-age=604800, immutable" always;
        # Cache assets for 1 week (604800 seconds) and mark them immutable
    }
}
